/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type {
  FunctionFragment,
  Result,
  EventFragment,
} from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "../../common";

export interface SafuWalletInterface extends utils.Interface {
  functions: {
    "getOwner(uint256)": FunctionFragment;
    "m_dailyLimit()": FunctionFragment;
    "m_lastDay()": FunctionFragment;
    "m_numOwners()": FunctionFragment;
    "m_required()": FunctionFragment;
    "m_spentToday()": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "getOwner"
      | "m_dailyLimit"
      | "m_lastDay"
      | "m_numOwners"
      | "m_required"
      | "m_spentToday"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "getOwner",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "m_dailyLimit",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "m_lastDay", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "m_numOwners",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "m_required",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "m_spentToday",
    values?: undefined
  ): string;

  decodeFunctionResult(functionFragment: "getOwner", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "m_dailyLimit",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "m_lastDay", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "m_numOwners",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "m_required", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "m_spentToday",
    data: BytesLike
  ): Result;

  events: {
    "Deposit(address,uint256)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "Deposit"): EventFragment;
}

export interface DepositEventObject {
  _from: string;
  value: BigNumber;
}
export type DepositEvent = TypedEvent<[string, BigNumber], DepositEventObject>;

export type DepositEventFilter = TypedEventFilter<DepositEvent>;

export interface SafuWallet extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: SafuWalletInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    getOwner(
      ownerIndex: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[string]>;

    m_dailyLimit(overrides?: CallOverrides): Promise<[BigNumber]>;

    m_lastDay(overrides?: CallOverrides): Promise<[BigNumber]>;

    m_numOwners(overrides?: CallOverrides): Promise<[BigNumber]>;

    m_required(overrides?: CallOverrides): Promise<[BigNumber]>;

    m_spentToday(overrides?: CallOverrides): Promise<[BigNumber]>;
  };

  getOwner(
    ownerIndex: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<string>;

  m_dailyLimit(overrides?: CallOverrides): Promise<BigNumber>;

  m_lastDay(overrides?: CallOverrides): Promise<BigNumber>;

  m_numOwners(overrides?: CallOverrides): Promise<BigNumber>;

  m_required(overrides?: CallOverrides): Promise<BigNumber>;

  m_spentToday(overrides?: CallOverrides): Promise<BigNumber>;

  callStatic: {
    getOwner(
      ownerIndex: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<string>;

    m_dailyLimit(overrides?: CallOverrides): Promise<BigNumber>;

    m_lastDay(overrides?: CallOverrides): Promise<BigNumber>;

    m_numOwners(overrides?: CallOverrides): Promise<BigNumber>;

    m_required(overrides?: CallOverrides): Promise<BigNumber>;

    m_spentToday(overrides?: CallOverrides): Promise<BigNumber>;
  };

  filters: {
    "Deposit(address,uint256)"(_from?: null, value?: null): DepositEventFilter;
    Deposit(_from?: null, value?: null): DepositEventFilter;
  };

  estimateGas: {
    getOwner(
      ownerIndex: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    m_dailyLimit(overrides?: CallOverrides): Promise<BigNumber>;

    m_lastDay(overrides?: CallOverrides): Promise<BigNumber>;

    m_numOwners(overrides?: CallOverrides): Promise<BigNumber>;

    m_required(overrides?: CallOverrides): Promise<BigNumber>;

    m_spentToday(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    getOwner(
      ownerIndex: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    m_dailyLimit(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    m_lastDay(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    m_numOwners(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    m_required(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    m_spentToday(overrides?: CallOverrides): Promise<PopulatedTransaction>;
  };
}
