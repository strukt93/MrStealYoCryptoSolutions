/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  TreasureVault,
  TreasureVaultInterface,
} from "../../../contracts/malleable/TreasureVault";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getChainid",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "removeFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "sendFundsWithAuth",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60c06040523480156200001157600080fd5b503373ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1660601b815250507f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6040518060400160405280600d81526020017f54726561737572655661756c7400000000000000000000000000000000000000815250805190602001206040518060400160405280600181526020017f310000000000000000000000000000000000000000000000000000000000000081525080519060200120620000f46200012e60201b60201c565b306040516020016200010b95949392919062000169565b60405160208183030381529060405280519060200120608081815250506200020e565b600046905090565b6200014181620001c6565b82525050565b6200015281620001da565b82525050565b620001638162000204565b82525050565b600060a08201905062000180600083018862000147565b6200018f602083018762000147565b6200019e604083018662000147565b620001ad606083018562000158565b620001bc608083018462000136565b9695505050505050565b6000620001d382620001e4565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60805160a05160601c610bb26200024c600039600081816101a30152818161032401526104ee01526000818161015301526102860152610bb26000f3fe6080604052600436106100595760003560e01c80633644e515146100655780633669795e146100905780633b639e6f146100bb5780638da5cb5b146100e6578063d22569d814610111578063feac51f51461013a57610060565b3661006057005b600080fd5b34801561007157600080fd5b5061007a610151565b604051610087919061088d565b60405180910390f35b34801561009c57600080fd5b506100a5610175565b6040516100b291906109a4565b60405180910390f35b3480156100c757600080fd5b506100d061017d565b6040516100dd919061088d565b60405180910390f35b3480156100f257600080fd5b506100fb6101a1565b6040516101089190610872565b60405180910390f35b34801561011d57600080fd5b5061013860048036038101906101339190610632565b6101c5565b005b34801561014657600080fd5b5061014f6104ec565b005b7f000000000000000000000000000000000000000000000000000000000000000081565b600046905090565b7f6ed2e86fd9b92b2262ae3bcda6523f0a61ddb771ce54c49b5736ce1b26e63ef081565b7f000000000000000000000000000000000000000000000000000000000000000081565b3373ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff1614610233576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022a90610984565b60405180910390fd5b60007f6ed2e86fd9b92b2262ae3bcda6523f0a61ddb771ce54c49b5736ce1b26e63ef0868660405160200161026a939291906108a8565b60405160208183030381529060405280519060200120905060007f0000000000000000000000000000000000000000000000000000000000000000826040516020016102b79291906107e9565b6040516020818303038152906040528051906020012090506000600182878787604051600081526020016040526040516102f494939291906108df565b6020604051602081039080840390855afa158015610316573d6000803e3d6000fd5b5050506020604051035190507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146103b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103a790610924565b60405180910390fd5b60008686866040516020016103c793929190610835565b60405160208183030381529060405280519060200120905060008082815260200190815260200160002060009054906101000a900460ff161561043f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043690610964565b60405180910390fd5b600160008083815260200190815260200160002060006101000a81548160ff02191690831515021790555060003373ffffffffffffffffffffffffffffffffffffffff168a60405161049090610820565b60006040518083038185875af1925050503d80600081146104cd576040519150601f19603f3d011682016040523d82523d6000602084013e6104d2565b606091505b50509050806104e057600080fd5b50505050505050505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461057a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057190610944565b60405180910390fd5b60003373ffffffffffffffffffffffffffffffffffffffff16476040516105a090610820565b60006040518083038185875af1925050503d80600081146105dd576040519150601f19603f3d011682016040523d82523d6000602084013e6105e2565b606091505b50509050806105f057600080fd5b50565b60008135905061060281610b37565b92915050565b60008135905061061781610b4e565b92915050565b60008135905061062c81610b65565b92915050565b600080600080600060a0868803121561064e5761064d610a55565b5b600061065c88828901610608565b955050602061066d88828901610608565b945050604061067e8882890161061d565b935050606061068f888289016105f3565b92505060806106a0888289016105f3565b9150509295509295909350565b6106b6816109e6565b82525050565b6106c5816109f8565b82525050565b6106dc6106d7826109f8565b610a39565b82525050565b60006106ef600b836109ca565b91506106fa82610a67565b602082019050919050565b6000610712600e836109ca565b915061071d82610a90565b602082019050919050565b60006107356002836109db565b915061074082610ab9565b600282019050919050565b60006107586009836109ca565b915061076382610ae2565b602082019050919050565b600061077b6003836109ca565b915061078682610b0b565b602082019050919050565b600061079e6000836109bf565b91506107a982610b34565b600082019050919050565b6107bd81610a22565b82525050565b6107cc81610a2c565b82525050565b6107e36107de82610a2c565b610a43565b82525050565b60006107f482610728565b915061080082856106cb565b60208201915061081082846106cb565b6020820191508190509392505050565b600061082b82610791565b9150819050919050565b600061084182866107d2565b60018201915061085182856106cb565b60208201915061086182846106cb565b602082019150819050949350505050565b600060208201905061088760008301846106ad565b92915050565b60006020820190506108a260008301846106bc565b92915050565b60006060820190506108bd60008301866106bc565b6108ca60208301856107b4565b6108d760408301846107b4565b949350505050565b60006080820190506108f460008301876106bc565b61090160208301866107c3565b61090e60408301856106bc565b61091b60608301846106bc565b95945050505050565b6000602082019050818103600083015261093d816106e2565b9050919050565b6000602082019050818103600083015261095d81610705565b9050919050565b6000602082019050818103600083015261097d8161074b565b9050919050565b6000602082019050818103600083015261099d8161076e565b9050919050565b60006020820190506109b960008301846107b4565b92915050565b600081905092915050565b600082825260208201905092915050565b600081905092915050565b60006109f182610a02565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b6000819050919050565b6000610a4e82610a5a565b9050919050565b600080fd5b60008160f81b9050919050565b7f696e76616c696420736967000000000000000000000000000000000000000000600082015250565b7f696e76616c69642063616c6c6572000000000000000000000000000000000000600082015250565b7f1901000000000000000000000000000000000000000000000000000000000000600082015250565b7f7369672072657573650000000000000000000000000000000000000000000000600082015250565b7f454f410000000000000000000000000000000000000000000000000000000000600082015250565b50565b610b40816109f8565b8114610b4b57600080fd5b50565b610b5781610a22565b8114610b6257600080fd5b50565b610b6e81610a2c565b8114610b7957600080fd5b5056fea2646970667358221220d7d0934e5228e6a3550684eabd7fa6ecf1a7e6b84d89af171d6dbdb91f75e7ab64736f6c63430008070033";

type TreasureVaultConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TreasureVaultConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TreasureVault__factory extends ContractFactory {
  constructor(...args: TreasureVaultConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TreasureVault> {
    return super.deploy(overrides || {}) as Promise<TreasureVault>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TreasureVault {
    return super.attach(address) as TreasureVault;
  }
  override connect(signer: Signer): TreasureVault__factory {
    return super.connect(signer) as TreasureVault__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TreasureVaultInterface {
    return new utils.Interface(_abi) as TreasureVaultInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TreasureVault {
    return new Contract(address, _abi, signerOrProvider) as TreasureVault;
  }
}
