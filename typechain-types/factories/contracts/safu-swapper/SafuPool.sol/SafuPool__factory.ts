/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  SafuPool,
  SafuPoolInterface,
} from "../../../../contracts/safu-swapper/SafuPool.sol/SafuPool";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_base",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_utils",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "member",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "inputBase",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "inputToken",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "unitsIssued",
        type: "uint256",
      },
    ],
    name: "AddLiquidity",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "member",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "outputBase",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "outputToken",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "unitsClaimed",
        type: "uint256",
      },
    ],
    name: "RemoveLiquidity",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "tokenFrom",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenTo",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "inputAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "outputAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "Swapped",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "BASE",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TOKEN",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_baseAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_tokenAmount",
        type: "uint256",
      },
    ],
    name: "addLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "liquidityUnits",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "member",
        type: "address",
      },
    ],
    name: "addLiquidityForMember",
    outputs: [
      {
        internalType: "uint256",
        name: "liquidityUnits",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseAmountPooled",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "removeAllLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "outputBase",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "outputToken",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "member",
        type: "address",
      },
    ],
    name: "removeLiquidityForMember",
    outputs: [
      {
        internalType: "uint256",
        name: "outputBase",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "outputToken",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "toToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "swap",
    outputs: [
      {
        internalType: "uint256",
        name: "outputAmount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "member",
        type: "address",
      },
    ],
    name: "swapTo",
    outputs: [
      {
        internalType: "uint256",
        name: "outputAmount",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenAmountPooled",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162003726380380620037268339818101604052810190620000379190620003c2565b8173ffffffffffffffffffffffffffffffffffffffff166306fdde036040518163ffffffff1660e01b815260040160006040518083038186803b1580156200007e57600080fd5b505afa15801562000093573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190620000be91906200041e565b604051602001620000d09190620004f4565b6040516020818303038152906040528273ffffffffffffffffffffffffffffffffffffffff166306fdde036040518163ffffffff1660e01b815260040160006040518083038186803b1580156200012657600080fd5b505afa1580156200013b573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906200016691906200041e565b6040516020016200017891906200051a565b60405160208183030381529060405281600390805190602001906200019f9291906200027d565b508060049080519060200190620001b89291906200027d565b50505082600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b815250505050506200077a565b8280546200028b906200061f565b90600052602060002090601f016020900481019282620002af5760008555620002fb565b82601f10620002ca57805160ff1916838001178555620002fb565b82800160010185558215620002fb579182015b82811115620002fa578251825591602001919060010190620002dd565b5b5090506200030a91906200030e565b5090565b5b80821115620003295760008160009055506001016200030f565b5090565b6000620003446200033e8462000569565b62000540565b905082815260208101848484011115620003635762000362620006ee565b5b62000370848285620005e9565b509392505050565b600081519050620003898162000760565b92915050565b600082601f830112620003a757620003a6620006e9565b5b8151620003b98482602086016200032d565b91505092915050565b600080600060608486031215620003de57620003dd620006f8565b5b6000620003ee8682870162000378565b9350506020620004018682870162000378565b9250506040620004148682870162000378565b9150509250925092565b600060208284031215620004375762000436620006f8565b5b600082015167ffffffffffffffff811115620004585762000457620006f3565b5b62000466848285016200038f565b91505092915050565b60006200047c826200059f565b620004888185620005aa565b93506200049a818560208601620005e9565b80840191505092915050565b6000620004b5600b83620005aa565b9150620004c2826200070e565b600b82019050919050565b6000620004dc600583620005aa565b9150620004e98262000737565b600582019050919050565b60006200050182620004a6565b91506200050f82846200046f565b915081905092915050565b60006200052782620004cd565b91506200053582846200046f565b915081905092915050565b60006200054c6200055f565b90506200055a828262000655565b919050565b6000604051905090565b600067ffffffffffffffff821115620005875762000586620006ba565b5b6200059282620006fd565b9050602081019050919050565b600081519050919050565b600081905092915050565b6000620005c282620005c9565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60005b8381101562000609578082015181840152602081019050620005ec565b8381111562000619576000848401525b50505050565b600060028204905060018216806200063857607f821691505b602082108114156200064f576200064e6200068b565b5b50919050565b6200066082620006fd565b810181811067ffffffffffffffff82111715620006825762000681620006ba565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f53616675506f6f6c56312d000000000000000000000000000000000000000000600082015250565b7f534146552d000000000000000000000000000000000000000000000000000000600082015250565b6200076b81620005b5565b81146200077757600080fd5b50565b60805160601c612f63620007c3600039600081816109d0015281816110c301528181611196015281816119ee01528181611bc201528181611e720152611f290152612f636000f3fe6080604052600436106101405760003560e01c806382bfefc8116100b6578063b37431811161006f578063b3743181146104b6578063d004f0f7146104e1578063dd62ed3e1461051e578063ec342ad01461055b578063eec7faa114610586578063fbad9014146105b157610140565b806382bfefc81461037d57806388a780e5146103a857806395d89b41146103d45780639cd441da146103ff578063a457c2d71461043c578063a9059cbb1461047957610140565b8063313ce56711610108578063313ce5671461024557806339509351146102705780634864d140146102ad5780635514f58b146102d857806370a08231146103155780637579c07f1461035257610140565b806306fdde0314610145578063095ea7b31461017057806318160ddd146101ad57806323b872dd146101d85780632783e4a914610215575b600080fd5b34801561015157600080fd5b5061015a6105ef565b604051610167919061277f565b60405180910390f35b34801561017c57600080fd5b5061019760048036038101906101929190612381565b610681565b6040516101a49190612764565b60405180910390f35b3480156101b957600080fd5b506101c26106a4565b6040516101cf9190612901565b60405180910390f35b3480156101e457600080fd5b506101ff60048036038101906101fa919061232e565b6106ae565b60405161020c9190612764565b60405180910390f35b61022f600480360381019061022a91906122ee565b6106dd565b60405161023c9190612901565b60405180910390f35b34801561025157600080fd5b5061025a61096f565b6040516102679190612a06565b60405180910390f35b34801561027c57600080fd5b5061029760048036038101906102929190612381565b610978565b6040516102a49190612764565b60405180910390f35b3480156102b957600080fd5b506102c26109af565b6040516102cf9190612901565b60405180910390f35b3480156102e457600080fd5b506102ff60048036038101906102fa91906122c1565b6109b5565b60405161030c9190612901565b60405180910390f35b34801561032157600080fd5b5061033c600480360381019061033791906122c1565b610ae6565b6040516103499190612901565b60405180910390f35b34801561035e57600080fd5b50610367610b2e565b6040516103749190612901565b60405180910390f35b34801561038957600080fd5b50610392610b34565b60405161039f9190612651565b60405180910390f35b3480156103b457600080fd5b506103bd610b5a565b6040516103cb929190612953565b60405180910390f35b3480156103e057600080fd5b506103e9610b81565b6040516103f6919061277f565b60405180910390f35b34801561040b57600080fd5b506104266004803603810190610421919061241b565b610c13565b6040516104339190612901565b60405180910390f35b34801561044857600080fd5b50610463600480360381019061045e9190612381565b610d8a565b6040516104709190612764565b60405180910390f35b34801561048557600080fd5b506104a0600480360381019061049b9190612381565b610e01565b6040516104ad9190612764565b60405180910390f35b3480156104c257600080fd5b506104cb610e24565b6040516104d89190612901565b60405180910390f35b3480156104ed57600080fd5b5061050860048036038101906105039190612381565b610e2a565b6040516105159190612901565b60405180910390f35b34801561052a57600080fd5b50610545600480360381019061054091906122ee565b610ffe565b6040516105529190612901565b60405180910390f35b34801561056757600080fd5b50610570611085565b60405161057d9190612651565b60405180910390f35b34801561059257600080fd5b5061059b6110ab565b6040516105a89190612901565b60405180910390f35b3480156105bd57600080fd5b506105d860048036038101906105d391906122c1565b6110b1565b6040516105e6929190612953565b60405180910390f35b6060600380546105fe90612b4f565b80601f016020809104026020016040519081016040528092919081815260200182805461062a90612b4f565b80156106775780601f1061064c57610100808354040283529160200191610677565b820191906000526020600020905b81548152906001019060200180831161065a57829003601f168201915b5050505050905090565b60008061068c61141e565b9050610699818585611426565b600191505092915050565b6000600254905090565b6000806106b961141e565b90506106c68582856115f1565b6106d185858561167d565b60019150509392505050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614806107885750600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16145b6107c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107be906128a1565b60405180910390fd5b600080600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16141561085f57600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915061084d6118fe565b9050610858816119dd565b925061089a565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915061088c611ad2565b905061089781611bb1565b92505b7f268a93038deccaf0b954c94b2c84d566a2176cb264383b94f7f3843c63c198f782868386886040516108d19594939291906126a3565b60405180910390a18473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85856040518363ffffffff1660e01b81526004016109149291906126f6565b602060405180830381600087803b15801561092e57600080fd5b505af1158015610942573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061096691906123c1565b50505092915050565b60006012905090565b60008061098361141e565b90506109a48185856109958589610ffe565b61099f9190612a3d565b611426565b600191505092915050565b60075481565b6000806109c0611ad2565b905060006109cc6118fe565b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663c5c11ee98360075484600854610a1a6106a4565b6040518663ffffffff1660e01b8152600401610a3a9594939291906129b3565b602060405180830381600087803b158015610a5457600080fd5b505af1158015610a68573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a8c91906123ee565b9250610a988282611ca6565b610aa28484611d0e565b7fbeb3885786d637a474cbc287c0a44587231633a077f0bd30354d5a4b18996fce84838386604051610ad7949392919061271f565b60405180910390a15050919050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60095481565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080610b6f30610b6a33610ae6565b610e01565b50610b79336110b1565b915091509091565b606060048054610b9090612b4f565b80601f0160208091040260200160405190810160405280929190818152602001828054610bbc90612b4f565b8015610c095780601f10610bde57610100808354040283529160200191610c09565b820191906000526020600020905b815481529060010190602001808311610bec57829003601f168201915b5050505050905090565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b8152600401610c749392919061266c565b602060405180830381600087803b158015610c8e57600080fd5b505af1158015610ca2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc691906123c1565b50600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401610d269392919061266c565b602060405180830381600087803b158015610d4057600080fd5b505af1158015610d54573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d7891906123c1565b50610d82336109b5565b905092915050565b600080610d9561141e565b90506000610da38286610ffe565b905083811015610de8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ddf906128c1565b60405180910390fd5b610df58286868403611426565b60019250505092915050565b600080610e0c61141e565b9050610e1981858561167d565b600191505092915050565b600a5481565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610f3957600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401610ee19392919061266c565b602060405180830381600087803b158015610efb57600080fd5b505af1158015610f0f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f3391906123c1565b50610fec565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401610f989392919061266c565b602060405180830381600087803b158015610fb257600080fd5b505af1158015610fc6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fea91906123c1565b505b610ff683336106dd565b905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60085481565b60008060006110bf30610ae6565b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16637d4bb5eb82600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16306040518463ffffffff1660e01b81526004016111409392919061291c565b602060405180830381600087803b15801561115a57600080fd5b505af115801561116e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061119291906123ee565b92507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16637d4bb5eb82600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16306040518463ffffffff1660e01b81526004016112139392919061291c565b602060405180830381600087803b15801561122d57600080fd5b505af1158015611241573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061126591906123ee565b91506112718383611e6e565b61127b308261204e565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85856040518363ffffffff1660e01b81526004016112d89291906126f6565b602060405180830381600087803b1580156112f257600080fd5b505af1158015611306573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061132a91906123c1565b50600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85846040518363ffffffff1660e01b81526004016113889291906126f6565b602060405180830381600087803b1580156113a257600080fd5b505af11580156113b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113da91906123c1565b507f59c3a0b60c6ab7deb62e1440c9e72441db6db7dfe514dba8cb18e60c0d896efa84848484604051611410949392919061271f565b60405180910390a150915091565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611496576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161148d90612881565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611506576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114fd906127e1565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516115e49190612901565b60405180910390a3505050565b60006115fd8484610ffe565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146116775781811015611669576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161166090612801565b60405180910390fd5b6116768484848403611426565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156116ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116e490612861565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561175d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611754906127a1565b60405180910390fd5b611768838383612225565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156117ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117e590612821565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546118819190612a3d565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516118e59190612901565b60405180910390a36118f884848461222a565b50505050565b600080600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161195c9190612651565b60206040518083038186803b15801561197457600080fd5b505afa158015611988573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119ac91906123ee565b90506008548111156119d4576119cd6008548261222f90919063ffffffff16565b91506119d9565b600091505b5090565b6000806008549050600060075490507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663701baaf38584846040518463ffffffff1660e01b8152600401611a499392919061297c565b602060405180830381600087803b158015611a6357600080fd5b505af1158015611a77573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a9b91906123ee565b9250611acb611ab3848361222f90919063ffffffff16565b611ac6868561224590919063ffffffff16565b61225b565b5050919050565b600080600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401611b309190612651565b60206040518083038186803b158015611b4857600080fd5b505afa158015611b5c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b8091906123ee565b9050600754811115611ba857611ba16007548261222f90919063ffffffff16565b9150611bad565b600091505b5090565b6000806007549050600060085490507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663701baaf38584846040518463ffffffff1660e01b8152600401611c1d9392919061297c565b602060405180830381600087803b158015611c3757600080fd5b505af1158015611c4b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c6f91906123ee565b9250611c9f611c87858461224590919063ffffffff16565b611c9a858461222f90919063ffffffff16565b61225b565b5050919050565b8160076000828254611cb89190612a3d565b925050819055508060086000828254611cd19190612a3d565b925050819055508160096000828254611cea9190612a3d565b9250508190555080600a6000828254611d039190612a3d565b925050819055505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611d7e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d75906128e1565b60405180910390fd5b611d8a60008383612225565b8060026000828254611d9c9190612a3d565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611df19190612a3d565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611e569190612901565b60405180910390a3611e6a6000838361222a565b5050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16631ba326c4846007546009546040518463ffffffff1660e01b8152600401611ed19392919061297c565b602060405180830381600087803b158015611eeb57600080fd5b505af1158015611eff573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f2391906123ee565b905060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16631ba326c484600854600a546040518463ffffffff1660e01b8152600401611f889392919061297c565b602060405180830381600087803b158015611fa257600080fd5b505af1158015611fb6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fda91906123ee565b9050611ff18260095461222f90919063ffffffff16565b60098190555061200c81600a5461222f90919063ffffffff16565b600a819055506120278460075461222f90919063ffffffff16565b6007819055506120428360085461222f90919063ffffffff16565b60088190555050505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156120be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120b590612841565b60405180910390fd5b6120ca82600083612225565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015612150576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612147906127c1565b60405180910390fd5b8181036000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600260008282546121a79190612a93565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161220c9190612901565b60405180910390a36122208360008461222a565b505050565b505050565b505050565b6000818361223d9190612a93565b905092915050565b600081836122539190612a3d565b905092915050565b81600781905550806008819055505050565b60008135905061227c81612ee8565b92915050565b60008151905061229181612eff565b92915050565b6000813590506122a681612f16565b92915050565b6000815190506122bb81612f16565b92915050565b6000602082840312156122d7576122d6612bdf565b5b60006122e58482850161226d565b91505092915050565b6000806040838503121561230557612304612bdf565b5b60006123138582860161226d565b92505060206123248582860161226d565b9150509250929050565b60008060006060848603121561234757612346612bdf565b5b60006123558682870161226d565b93505060206123668682870161226d565b925050604061237786828701612297565b9150509250925092565b6000806040838503121561239857612397612bdf565b5b60006123a68582860161226d565b92505060206123b785828601612297565b9150509250929050565b6000602082840312156123d7576123d6612bdf565b5b60006123e584828501612282565b91505092915050565b60006020828403121561240457612403612bdf565b5b6000612412848285016122ac565b91505092915050565b6000806040838503121561243257612431612bdf565b5b600061244085828601612297565b925050602061245185828601612297565b9150509250929050565b61246481612ac7565b82525050565b61247381612ad9565b82525050565b600061248482612a21565b61248e8185612a2c565b935061249e818560208601612b1c565b6124a781612be4565b840191505092915050565b60006124bf602383612a2c565b91506124ca82612bf5565b604082019050919050565b60006124e2602283612a2c565b91506124ed82612c44565b604082019050919050565b6000612505602283612a2c565b915061251082612c93565b604082019050919050565b6000612528601d83612a2c565b915061253382612ce2565b602082019050919050565b600061254b602683612a2c565b915061255682612d0b565b604082019050919050565b600061256e602183612a2c565b915061257982612d5a565b604082019050919050565b6000612591602583612a2c565b915061259c82612da9565b604082019050919050565b60006125b4602483612a2c565b91506125bf82612df8565b604082019050919050565b60006125d7601583612a2c565b91506125e282612e47565b602082019050919050565b60006125fa602583612a2c565b915061260582612e70565b604082019050919050565b600061261d601f83612a2c565b915061262882612ebf565b602082019050919050565b61263c81612b05565b82525050565b61264b81612b0f565b82525050565b6000602082019050612666600083018461245b565b92915050565b6000606082019050612681600083018661245b565b61268e602083018561245b565b61269b6040830184612633565b949350505050565b600060a0820190506126b8600083018861245b565b6126c5602083018761245b565b6126d26040830186612633565b6126df6060830185612633565b6126ec608083018461245b565b9695505050505050565b600060408201905061270b600083018561245b565b6127186020830184612633565b9392505050565b6000608082019050612734600083018761245b565b6127416020830186612633565b61274e6040830185612633565b61275b6060830184612633565b95945050505050565b6000602082019050612779600083018461246a565b92915050565b600060208201905081810360008301526127998184612479565b905092915050565b600060208201905081810360008301526127ba816124b2565b9050919050565b600060208201905081810360008301526127da816124d5565b9050919050565b600060208201905081810360008301526127fa816124f8565b9050919050565b6000602082019050818103600083015261281a8161251b565b9050919050565b6000602082019050818103600083015261283a8161253e565b9050919050565b6000602082019050818103600083015261285a81612561565b9050919050565b6000602082019050818103600083015261287a81612584565b9050919050565b6000602082019050818103600083015261289a816125a7565b9050919050565b600060208201905081810360008301526128ba816125ca565b9050919050565b600060208201905081810360008301526128da816125ed565b9050919050565b600060208201905081810360008301526128fa81612610565b9050919050565b60006020820190506129166000830184612633565b92915050565b60006060820190506129316000830186612633565b61293e602083018561245b565b61294b604083018461245b565b949350505050565b60006040820190506129686000830185612633565b6129756020830184612633565b9392505050565b60006060820190506129916000830186612633565b61299e6020830185612633565b6129ab6040830184612633565b949350505050565b600060a0820190506129c86000830188612633565b6129d56020830187612633565b6129e26040830186612633565b6129ef6060830185612633565b6129fc6080830184612633565b9695505050505050565b6000602082019050612a1b6000830184612642565b92915050565b600081519050919050565b600082825260208201905092915050565b6000612a4882612b05565b9150612a5383612b05565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115612a8857612a87612b81565b5b828201905092915050565b6000612a9e82612b05565b9150612aa983612b05565b925082821015612abc57612abb612b81565b5b828203905092915050565b6000612ad282612ae5565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015612b3a578082015181840152602081019050612b1f565b83811115612b49576000848401525b50505050565b60006002820490506001821680612b6757607f821691505b60208210811415612b7b57612b7a612bb0565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f4d7573742062652042415345206f7220544f4b454e0000000000000000000000600082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b612ef181612ac7565b8114612efc57600080fd5b50565b612f0881612ad9565b8114612f1357600080fd5b50565b612f1f81612b05565b8114612f2a57600080fd5b5056fea26469706673582212207755a57bfd5a16e8839606dc3f6b818d19d4477620d1707db4e425a1f79f425264736f6c63430008070033";

type SafuPoolConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SafuPoolConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SafuPool__factory extends ContractFactory {
  constructor(...args: SafuPoolConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _base: PromiseOrValue<string>,
    _token: PromiseOrValue<string>,
    _utils: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SafuPool> {
    return super.deploy(
      _base,
      _token,
      _utils,
      overrides || {}
    ) as Promise<SafuPool>;
  }
  override getDeployTransaction(
    _base: PromiseOrValue<string>,
    _token: PromiseOrValue<string>,
    _utils: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_base, _token, _utils, overrides || {});
  }
  override attach(address: string): SafuPool {
    return super.attach(address) as SafuPool;
  }
  override connect(signer: Signer): SafuPool__factory {
    return super.connect(signer) as SafuPool__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SafuPoolInterface {
    return new utils.Interface(_abi) as SafuPoolInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SafuPool {
    return new Contract(address, _abi, signerOrProvider) as SafuPool;
  }
}
