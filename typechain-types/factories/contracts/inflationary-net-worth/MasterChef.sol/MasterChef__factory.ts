/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  MasterChef,
  MasterChefInterface,
} from "../../../../contracts/inflationary-net-worth/MasterChef.sol/MasterChef";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IMuny",
        name: "_muny",
        type: "address",
      },
      {
        internalType: "address",
        name: "_devaddr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_munyPerBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_startBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_bonusEndBlock",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "EmergencyWithdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "BONUS_MULTIPLIER",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_allocPoint",
        type: "uint256",
      },
      {
        internalType: "contract IERC20",
        name: "_lpToken",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_withUpdate",
        type: "bool",
      },
    ],
    name: "add",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "bonusEndBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_devaddr",
        type: "address",
      },
    ],
    name: "dev",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "devaddr",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
    ],
    name: "emergencyWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_from",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_to",
        type: "uint256",
      },
    ],
    name: "getMultiplier",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "massUpdatePools",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "muny",
    outputs: [
      {
        internalType: "contract IMuny",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "munyPerBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "pendingMuny",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "poolInfo",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "lpToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allocPoint",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastRewardBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "accMunyPerShare",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_allocPoint",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_withUpdate",
        type: "bool",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalAllocPoint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
    ],
    name: "updatePool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardDebt",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260006007553480156200001657600080fd5b50604051620029b0380380620029b083398181016040528101906200003c91906200020f565b6200005c62000050620000fe60201b60201c565b6200010660201b60201c565b84600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600481905550806003819055508160088190555050505050506200033c565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081519050620001db81620002ee565b92915050565b600081519050620001f28162000308565b92915050565b600081519050620002098162000322565b92915050565b600080600080600060a086880312156200022e576200022d620002e9565b5b60006200023e88828901620001e1565b95505060206200025188828901620001ca565b94505060406200026488828901620001f8565b93505060606200027788828901620001f8565b92505060806200028a88828901620001f8565b9150509295509295909350565b6000620002a482620002bf565b9050919050565b6000620002b88262000297565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600080fd5b620002f98162000297565b81146200030557600080fd5b50565b6200031381620002ab565b81146200031f57600080fd5b50565b6200032d81620002df565b81146200033957600080fd5b50565b612664806200034c6000396000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c8063715018a6116100c35780638dbb1e3a1161007c5780638dbb1e3a1461034357806393f1a40b14610373578063a0723ac0146103a4578063d49e77cd146103c2578063e2bbb158146103e0578063f2fde38b146103fc5761014d565b8063715018a61461029357806377c520631461029d57806382245f9d146102bb5780638aa28550146102eb5780638d88a90e146103095780638da5cb5b146103255761014d565b8063441a3e7011610115578063441a3e70146101fb57806348cd4cb11461021757806351eb05a6146102355780635312ea8e14610251578063630b5ba11461026d57806364482f79146102775761014d565b8063081e3eda146101525780631526fe271461017057806317caf6f1146101a35780631aed6553146101c15780631eaaa045146101df575b600080fd5b61015a610418565b60405161016791906120f5565b60405180910390f35b61018a60048036038101906101859190611be6565b610425565b60405161019a9493929190611f93565b60405180910390f35b6101ab610485565b6040516101b891906120f5565b60405180910390f35b6101c961048b565b6040516101d691906120f5565b60405180910390f35b6101f960048036038101906101f49190611c80565b610491565b005b61021560048036038101906102109190611cd3565b6105aa565b005b61021f6107c8565b60405161022c91906120f5565b60405180910390f35b61024f600480360381019061024a9190611be6565b6107ce565b005b61026b60048036038101906102669190611be6565b610ad0565b005b610275610c09565b005b610291600480360381019061028c9190611d13565b610c3c565b005b61029b610cd4565b005b6102a5610ce8565b6040516102b291906120f5565b60405180910390f35b6102d560048036038101906102d09190611c40565b610cee565b6040516102e291906120f5565b60405180910390f35b6102f3610f22565b60405161030091906120f5565b60405180910390f35b610323600480360381019061031e9190611b8c565b610f27565b005b61032d610ffb565b60405161033a9190611f18565b60405180910390f35b61035d60048036038101906103589190611cd3565b611024565b60405161036a91906120f5565b60405180910390f35b61038d60048036038101906103889190611c40565b6110d6565b60405161039b929190612110565b60405180910390f35b6103ac611107565b6040516103b99190611fd8565b60405180910390f35b6103ca61112d565b6040516103d79190611f18565b60405180910390f35b6103fa60048036038101906103f59190611cd3565b611153565b005b61041660048036038101906104119190611b8c565b61133a565b005b6000600580549050905090565b6005818154811061043557600080fd5b90600052602060002090600402016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030154905084565b60075481565b60035481565b6104996113be565b80156104a8576104a7610c09565b5b600060085443116104bb576008546104bd565b435b90506104d48460075461143c90919063ffffffff16565b600781905550600560405180608001604052808573ffffffffffffffffffffffffffffffffffffffff1681526020018681526020018381526020016000815250908060018154018082558091505060019003906000526020600020906004020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002015560608201518160030155505050505050565b6000600583815481106105c0576105bf6123fc565b5b9060005260206000209060040201905060006006600085815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050828160000154101561066b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610662906120b5565b60405180910390fd5b610674846107ce565b60006106be82600101546106b064e8d4a510006106a28760030154876000015461145290919063ffffffff16565b61146890919063ffffffff16565b61147e90919063ffffffff16565b90506106ca3382611494565b6106e184836000015461147e90919063ffffffff16565b826000018190555061071b64e8d4a5100061070d8560030154856000015461145290919063ffffffff16565b61146890919063ffffffff16565b826001018190555061077233858560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166116b69092919063ffffffff16565b843373ffffffffffffffffffffffffffffffffffffffff167ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568866040516107b991906120f5565b60405180910390a35050505050565b60085481565b6000600582815481106107e4576107e36123fc565b5b90600052602060002090600402019050806002015443116108055750610acd565b60008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016108649190611f18565b60206040518083038186803b15801561087c57600080fd5b505afa158015610890573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b49190611c13565b905060008114156108cf574382600201819055505050610acd565b60006108df836002015443611024565b9050600061092260075461091486600101546109066004548761145290919063ffffffff16565b61145290919063ffffffff16565b61146890919063ffffffff16565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f19600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610999600a8561146890919063ffffffff16565b6040518363ffffffff1660e01b81526004016109b6929190611f6a565b600060405180830381600087803b1580156109d057600080fd5b505af11580156109e4573d6000803e3d6000fd5b50505050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1930836040518363ffffffff1660e01b8152600401610a45929190611f6a565b600060405180830381600087803b158015610a5f57600080fd5b505af1158015610a73573d6000803e3d6000fd5b50505050610ab7610aa484610a9664e8d4a510008561145290919063ffffffff16565b61146890919063ffffffff16565b856003015461143c90919063ffffffff16565b8460030181905550438460020181905550505050505b50565b600060058281548110610ae657610ae56123fc565b5b9060005260206000209060040201905060006006600084815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050610b9d3382600001548460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166116b69092919063ffffffff16565b823373ffffffffffffffffffffffffffffffffffffffff167fbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae05958360000154604051610be891906120f5565b60405180910390a36000816000018190555060008160010181905550505050565b6000600580549050905060005b81811015610c3857610c27816107ce565b80610c3190612355565b9050610c16565b5050565b610c446113be565b8015610c5357610c52610c09565b5b610c9f82610c9160058681548110610c6e57610c6d6123fc565b5b90600052602060002090600402016001015460075461147e90919063ffffffff16565b61143c90919063ffffffff16565b6007819055508160058481548110610cba57610cb96123fc565b5b906000526020600020906004020160010181905550505050565b610cdc6113be565b610ce6600061173c565b565b60045481565b60008060058481548110610d0557610d046123fc565b5b9060005260206000209060040201905060006006600086815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008260030154905060008360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610dd19190611f18565b60206040518083038186803b158015610de957600080fd5b505afa158015610dfd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e219190611c13565b9050836002015443118015610e37575060008114155b15610ed2576000610e4c856002015443611024565b90506000610e8f600754610e818860010154610e736004548761145290919063ffffffff16565b61145290919063ffffffff16565b61146890919063ffffffff16565b9050610ecd610ebe84610eb064e8d4a510008561145290919063ffffffff16565b61146890919063ffffffff16565b8561143c90919063ffffffff16565b935050505b610f168360010154610f0864e8d4a51000610efa86886000015461145290919063ffffffff16565b61146890919063ffffffff16565b61147e90919063ffffffff16565b94505050505092915050565b600181565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610fb7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fae90612055565b60405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600354821161105c576110556001611047858561147e90919063ffffffff16565b61145290919063ffffffff16565b90506110d0565b600354831061107f57611078838361147e90919063ffffffff16565b90506110d0565b6110cd6110976003548461147e90919063ffffffff16565b6110bf60016110b18760035461147e90919063ffffffff16565b61145290919063ffffffff16565b61143c90919063ffffffff16565b90505b92915050565b6006602052816000526040600020602052806000526040600020600091509150508060000154908060010154905082565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060058381548110611169576111686123fc565b5b9060005260206000209060040201905060006006600085815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506111d6846107ce565b60008160000154111561123b57600061122d826001015461121f64e8d4a510006112118760030154876000015461145290919063ffffffff16565b61146890919063ffffffff16565b61147e90919063ffffffff16565b90506112393382611494565b505b61128c3330858560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611800909392919063ffffffff16565b6112a383826000015461143c90919063ffffffff16565b81600001819055506112dd64e8d4a510006112cf8460030154846000015461145290919063ffffffff16565b61146890919063ffffffff16565b8160010181905550833373ffffffffffffffffffffffffffffffffffffffff167f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a158560405161132c91906120f5565b60405180910390a350505050565b6113426113be565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156113b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113a990612015565b60405180910390fd5b6113bb8161173c565b50565b6113c6611889565b73ffffffffffffffffffffffffffffffffffffffff166113e4610ffb565b73ffffffffffffffffffffffffffffffffffffffff161461143a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161143190612075565b60405180910390fd5b565b6000818361144a919061216b565b905092915050565b6000818361146091906121f2565b905092915050565b6000818361147691906121c1565b905092915050565b6000818361148c919061224c565b905092915050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016114f19190611f18565b60206040518083038186803b15801561150957600080fd5b505afa15801561151d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115419190611c13565b90508082111561160057600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84836040518363ffffffff1660e01b81526004016115a8929190611f6a565b602060405180830381600087803b1580156115c257600080fd5b505af11580156115d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115fa9190611bb9565b506116b1565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84846040518363ffffffff1660e01b815260040161165d929190611f6a565b602060405180830381600087803b15801561167757600080fd5b505af115801561168b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116af9190611bb9565b505b505050565b6117378363a9059cbb60e01b84846040516024016116d5929190611f6a565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611891565b505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b611883846323b872dd60e01b85858560405160240161182193929190611f33565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611891565b50505050565b600033905090565b60006118f3826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166119589092919063ffffffff16565b905060008151111561195357808060200190518101906119139190611bb9565b611952576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611949906120d5565b60405180910390fd5b5b505050565b60606119678484600085611970565b90509392505050565b6060824710156119b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119ac90612035565b60405180910390fd5b6119be85611a84565b6119fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119f490612095565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051611a269190611f01565b60006040518083038185875af1925050503d8060008114611a63576040519150601f19603f3d011682016040523d82523d6000602084013e611a68565b606091505b5091509150611a78828286611aa7565b92505050949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60608315611ab757829050611b07565b600083511115611aca5782518084602001fd5b816040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611afe9190611ff3565b60405180910390fd5b9392505050565b600081359050611b1d816125d2565b92915050565b600081359050611b32816125e9565b92915050565b600081519050611b47816125e9565b92915050565b600081359050611b5c81612600565b92915050565b600081359050611b7181612617565b92915050565b600081519050611b8681612617565b92915050565b600060208284031215611ba257611ba161242b565b5b6000611bb084828501611b0e565b91505092915050565b600060208284031215611bcf57611bce61242b565b5b6000611bdd84828501611b38565b91505092915050565b600060208284031215611bfc57611bfb61242b565b5b6000611c0a84828501611b62565b91505092915050565b600060208284031215611c2957611c2861242b565b5b6000611c3784828501611b77565b91505092915050565b60008060408385031215611c5757611c5661242b565b5b6000611c6585828601611b62565b9250506020611c7685828601611b0e565b9150509250929050565b600080600060608486031215611c9957611c9861242b565b5b6000611ca786828701611b62565b9350506020611cb886828701611b4d565b9250506040611cc986828701611b23565b9150509250925092565b60008060408385031215611cea57611ce961242b565b5b6000611cf885828601611b62565b9250506020611d0985828601611b62565b9150509250929050565b600080600060608486031215611d2c57611d2b61242b565b5b6000611d3a86828701611b62565b9350506020611d4b86828701611b62565b9250506040611d5c86828701611b23565b9150509250925092565b611d6f81612280565b82525050565b6000611d8082612139565b611d8a818561214f565b9350611d9a818560208601612322565b80840191505092915050565b611daf816122da565b82525050565b611dbe816122ec565b82525050565b6000611dcf82612144565b611dd9818561215a565b9350611de9818560208601612322565b611df281612430565b840191505092915050565b6000611e0a60268361215a565b9150611e1582612441565b604082019050919050565b6000611e2d60268361215a565b9150611e3882612490565b604082019050919050565b6000611e5060098361215a565b9150611e5b826124df565b602082019050919050565b6000611e7360208361215a565b9150611e7e82612508565b602082019050919050565b6000611e96601d8361215a565b9150611ea182612531565b602082019050919050565b6000611eb960128361215a565b9150611ec48261255a565b602082019050919050565b6000611edc602a8361215a565b9150611ee782612583565b604082019050919050565b611efb816122d0565b82525050565b6000611f0d8284611d75565b915081905092915050565b6000602082019050611f2d6000830184611d66565b92915050565b6000606082019050611f486000830186611d66565b611f556020830185611d66565b611f626040830184611ef2565b949350505050565b6000604082019050611f7f6000830185611d66565b611f8c6020830184611ef2565b9392505050565b6000608082019050611fa86000830187611da6565b611fb56020830186611ef2565b611fc26040830185611ef2565b611fcf6060830184611ef2565b95945050505050565b6000602082019050611fed6000830184611db5565b92915050565b6000602082019050818103600083015261200d8184611dc4565b905092915050565b6000602082019050818103600083015261202e81611dfd565b9050919050565b6000602082019050818103600083015261204e81611e20565b9050919050565b6000602082019050818103600083015261206e81611e43565b9050919050565b6000602082019050818103600083015261208e81611e66565b9050919050565b600060208201905081810360008301526120ae81611e89565b9050919050565b600060208201905081810360008301526120ce81611eac565b9050919050565b600060208201905081810360008301526120ee81611ecf565b9050919050565b600060208201905061210a6000830184611ef2565b92915050565b60006040820190506121256000830185611ef2565b6121326020830184611ef2565b9392505050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b6000612176826122d0565b9150612181836122d0565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156121b6576121b561239e565b5b828201905092915050565b60006121cc826122d0565b91506121d7836122d0565b9250826121e7576121e66123cd565b5b828204905092915050565b60006121fd826122d0565b9150612208836122d0565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156122415761224061239e565b5b828202905092915050565b6000612257826122d0565b9150612262836122d0565b9250828210156122755761227461239e565b5b828203905092915050565b600061228b826122b0565b9050919050565b60008115159050919050565b60006122a982612280565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006122e5826122fe565b9050919050565b60006122f7826122fe565b9050919050565b600061230982612310565b9050919050565b600061231b826122b0565b9050919050565b60005b83811015612340578082015181840152602081019050612325565b8381111561234f576000848401525b50505050565b6000612360826122d0565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156123935761239261239e565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b7f6465763a207775743f0000000000000000000000000000000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b7f77697468647261773a206e6f7420676f6f640000000000000000000000000000600082015250565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6125db81612280565b81146125e657600080fd5b50565b6125f281612292565b81146125fd57600080fd5b50565b6126098161229e565b811461261457600080fd5b50565b612620816122d0565b811461262b57600080fd5b5056fea2646970667358221220885ed2ded75f334b79dacbc8eb6d9f24b770ee07acb2e5cfc670f3ba0900399864736f6c63430008070033";

type MasterChefConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MasterChefConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MasterChef__factory extends ContractFactory {
  constructor(...args: MasterChefConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _muny: PromiseOrValue<string>,
    _devaddr: PromiseOrValue<string>,
    _munyPerBlock: PromiseOrValue<BigNumberish>,
    _startBlock: PromiseOrValue<BigNumberish>,
    _bonusEndBlock: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MasterChef> {
    return super.deploy(
      _muny,
      _devaddr,
      _munyPerBlock,
      _startBlock,
      _bonusEndBlock,
      overrides || {}
    ) as Promise<MasterChef>;
  }
  override getDeployTransaction(
    _muny: PromiseOrValue<string>,
    _devaddr: PromiseOrValue<string>,
    _munyPerBlock: PromiseOrValue<BigNumberish>,
    _startBlock: PromiseOrValue<BigNumberish>,
    _bonusEndBlock: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _muny,
      _devaddr,
      _munyPerBlock,
      _startBlock,
      _bonusEndBlock,
      overrides || {}
    );
  }
  override attach(address: string): MasterChef {
    return super.attach(address) as MasterChef;
  }
  override connect(signer: Signer): MasterChef__factory {
    return super.connect(signer) as MasterChef__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MasterChefInterface {
    return new utils.Interface(_abi) as MasterChefInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MasterChef {
    return new Contract(address, _abi, signerOrProvider) as MasterChef;
  }
}
