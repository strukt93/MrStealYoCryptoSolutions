/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  RevestAccessControl,
  RevestAccessControlInterface,
} from "../../../../contracts/degen-jackpot/OtherContracts.sol/RevestAccessControl";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "registry",
        type: "address",
      },
    ],
    name: "setAddressRegistry",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161070738038061070783398181016040528101906100329190610176565b61004e61004361009560201b60201c565b61009d60201b60201c565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506101f1565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081519050610170816101da565b92915050565b60006020828403121561018c5761018b6101d5565b5b600061019a84828501610161565b91505092915050565b60006101ae826101b5565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6101e3816101a3565b81146101ee57600080fd5b50565b610507806102006000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806327c7812c14610051578063715018a61461006d5780638da5cb5b14610077578063f2fde38b14610095575b600080fd5b61006b6004803603810190610066919061031d565b6100b1565b005b6100756100fd565b005b61007f610111565b60405161008c919061039f565b60405180910390f35b6100af60048036038101906100aa919061031d565b61013a565b005b6100b96101be565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6101056101be565b61010f600061023c565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6101426101be565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156101b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101a9906103ba565b60405180910390fd5b6101bb8161023c565b50565b6101c6610300565b73ffffffffffffffffffffffffffffffffffffffff166101e4610111565b73ffffffffffffffffffffffffffffffffffffffff161461023a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610231906103da565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600081359050610317816104ba565b92915050565b6000602082840312156103335761033261043d565b5b600061034184828501610308565b91505092915050565b6103538161040b565b82525050565b60006103666026836103fa565b915061037182610442565b604082019050919050565b60006103896020836103fa565b915061039482610491565b602082019050919050565b60006020820190506103b4600083018461034a565b92915050565b600060208201905081810360008301526103d381610359565b9050919050565b600060208201905081810360008301526103f38161037c565b9050919050565b600082825260208201905092915050565b60006104168261041d565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6104c38161040b565b81146104ce57600080fd5b5056fea2646970667358221220a7f184fa9d4bf932de0042f80f81867b82060ad630d1e5a2dbb5b5615b83c15464736f6c63430008070033";

type RevestAccessControlConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RevestAccessControlConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RevestAccessControl__factory extends ContractFactory {
  constructor(...args: RevestAccessControlConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    provider: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RevestAccessControl> {
    return super.deploy(
      provider,
      overrides || {}
    ) as Promise<RevestAccessControl>;
  }
  override getDeployTransaction(
    provider: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(provider, overrides || {});
  }
  override attach(address: string): RevestAccessControl {
    return super.attach(address) as RevestAccessControl;
  }
  override connect(signer: Signer): RevestAccessControl__factory {
    return super.connect(signer) as RevestAccessControl__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RevestAccessControlInterface {
    return new utils.Interface(_abi) as RevestAccessControlInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RevestAccessControl {
    return new Contract(address, _abi, signerOrProvider) as RevestAccessControl;
  }
}
