/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  LockManager,
  LockManagerInterface,
} from "../../../contracts/degen-jackpot/LockManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fnftId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "addressLock",
            type: "address",
          },
          {
            internalType: "enum IRevest.LockType",
            name: "lockType",
            type: "uint8",
          },
        ],
        internalType: "struct IRevest.LockParam",
        name: "lock",
        type: "tuple",
      },
    ],
    name: "createLock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fnftId",
        type: "uint256",
      },
    ],
    name: "fnftIdToLock",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addressLock",
            type: "address",
          },
          {
            internalType: "enum IRevest.LockType",
            name: "lockType",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "unlocked",
            type: "bool",
          },
        ],
        internalType: "struct IRevest.Lock",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "fnftIdToLockId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lockId",
        type: "uint256",
      },
    ],
    name: "getLock",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addressLock",
            type: "address",
          },
          {
            internalType: "enum IRevest.LockType",
            name: "lockType",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "unlocked",
            type: "bool",
          },
        ],
        internalType: "struct IRevest.Lock",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fnftId",
        type: "uint256",
      },
    ],
    name: "getLockMaturity",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getRoleMember",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleMemberCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "lockTypes",
    outputs: [
      {
        internalType: "enum IRevest.LockType",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "locks",
    outputs: [
      {
        internalType: "address",
        name: "addressLock",
        type: "address",
      },
      {
        internalType: "enum IRevest.LockType",
        name: "lockType",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "unlocked",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "numLocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fnftId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lockId",
        type: "uint256",
      },
    ],
    name: "pointFNFTToLock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "registry",
        type: "address",
      },
    ],
    name: "setAddressRegistry",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fnftId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "unlockFNFT",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260006005553480156200001657600080fd5b50604051620032373803806200323783398181016040528101906200003c919062000193565b8060016000819055506200006562000059620000ae60201b60201c565b620000b660201b60201c565b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505062000218565b600033905090565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000815190506200018d81620001fe565b92915050565b600060208284031215620001ac57620001ab620001f9565b5b6000620001bc848285016200017c565b91505092915050565b6000620001d282620001d9565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6200020981620001c5565b81146200021557600080fd5b50565b61300f80620002286000396000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c806391d14854116100c3578063d68f4dd11161007c578063d68f4dd1146103d6578063d7f9220514610406578063f2fde38b14610422578063f4dadc611461043e578063fb68480514610470578063fc9ec25d146104a05761014d565b806391d14854146102ee578063a217fddf1461031e578063ca15c8731461033c578063cab4fb9c1461036c578063d422cf581461039c578063d547741f146103ba5761014d565b8063358e47ff11610115578063358e47ff1461021a57806336568abe1461024a5780633fe8ca0614610266578063715018a6146102965780638da5cb5b146102a05780639010d07c146102be5761014d565b806301ffc9a714610152578063248a9ca31461018257806327c7812c146101b257806329029c16146101ce5780632f2ff15d146101fe575b600080fd5b61016c60048036038101906101679190612363565b6104d0565b60405161017991906127d1565b60405180910390f35b61019c600480360381019061019791906122b6565b61054a565b6040516101a991906127ec565b60405180910390f35b6101cc60048036038101906101c7919061225c565b61056a565b005b6101e860048036038101906101e39190612390565b6105b6565b6040516101f5919061299f565b60405180910390f35b610218600480360381019061021391906122e3565b6105ce565b005b610234600480360381019061022f91906123fd565b6105ef565b604051610241919061299f565b60405180910390f35b610264600480360381019061025f91906122e3565b610b66565b005b610280600480360381019061027b9190612390565b610be9565b60405161028d9190612984565b60405180910390f35b61029e610cd5565b005b6102a8610ce9565b6040516102b5919061277f565b60405180910390f35b6102d860048036038101906102d39190612323565b610d13565b6040516102e5919061277f565b60405180910390f35b610308600480360381019061030391906122e3565b610d42565b60405161031591906127d1565b60405180910390f35b610326610dad565b60405161033391906127ec565b60405180910390f35b610356600480360381019061035191906122b6565b610db4565b604051610363919061299f565b60405180910390f35b61038660048036038101906103819190612390565b610dd8565b60405161039391906127d1565b60405180910390f35b6103a4610f37565b6040516103b1919061299f565b60405180910390f35b6103d460048036038101906103cf91906122e3565b610f3d565b005b6103f060048036038101906103eb9190612390565b610f5e565b6040516103fd9190612984565b60405180910390f35b610420600480360381019061041b919061243d565b611037565b005b61043c6004803603810190610437919061225c565b611396565b005b61045860048036038101906104539190612390565b61141a565b6040516104679392919061279a565b60405180910390f35b61048a600480360381019061048591906123bd565b61147e565b60405161049791906127d1565b60405180910390f35b6104ba60048036038101906104b59190612390565b611774565b6040516104c79190612807565b60405180910390f35b60007f5a05180f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061054357506105428261178a565b5b9050919050565b600060016000838152602001908152602001600020600101549050919050565b610572611804565b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60066020528060005260406000206000915090505481565b6105d78261054a565b6105e081611882565b6105ea8383611896565b505050565b60008073ffffffffffffffffffffffffffffffffffffffff166106106118ca565b73ffffffffffffffffffffffffffffffffffffffff161415610667576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065e90612884565b60405180910390fd5b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663035d0c696040518163ffffffff1660e01b815260040160206040518083038186803b1580156106cf57600080fd5b505afa1580156106e3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107079190612289565b73ffffffffffffffffffffffffffffffffffffffff166107256118ca565b73ffffffffffffffffffffffffffffffffffffffff1614806108185750600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354f2f7af6040518163ffffffff1660e01b815260040160206040518083038186803b1580156107aa57600080fd5b505afa1580156107be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e29190612289565b73ffffffffffffffffffffffffffffffffffffffff166108006118ca565b73ffffffffffffffffffffffffffffffffffffffff16145b806108f45750600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f97e7d746040518163ffffffff1660e01b815260040160206040518083038186803b15801561088657600080fd5b505afa15801561089a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108be9190612289565b73ffffffffffffffffffffffffffffffffffffffff166108dc6118ca565b73ffffffffffffffffffffffffffffffffffffffff16145b610933576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092a90612924565b60405180910390fd5b6000600181111561094757610946612c4a565b5b8260200151600181111561095e5761095d612c4a565b5b141561099f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610996906128a4565b60405180910390fd5b6000600760006005548152602001908152602001600020905082602001518160000160146101000a81548160ff021916908360018111156109e3576109e2612c4a565b5b02179055506001808111156109fb576109fa612c4a565b5b83602001516001811115610a1257610a11612c4a565b5b1415610ad857600073ffffffffffffffffffffffffffffffffffffffff16836000015173ffffffffffffffffffffffffffffffffffffffff161415610a8c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8390612884565b60405180910390fd5b82600001518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610b1a565b6000610b19576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1090612944565b60405180910390fd5b5b6005546006600086815260200190815260200160002081905550600160056000828254610b479190612a06565b925050819055506001600554610b5d9190612ab6565b91505092915050565b610b6e6118ca565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610bdb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bd290612964565b60405180910390fd5b610be582826118d2565b5050565b610bf1612143565b60076000600660008581526020019081526020016000205481526020019081526020016000206040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900460ff166001811115610c9d57610c9c612c4a565b5b6001811115610caf57610cae612c4a565b5b81526020016000820160159054906101000a900460ff1615151515815250509050919050565b610cdd611804565b610ce76000611906565b565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000610d3a82600260008681526020019081526020016000206119cc90919063ffffffff16565b905092915050565b60006001600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000801b81565b6000610dd1600260008481526020019081526020016000206119e6565b9050919050565b60008060076000600660008681526020019081526020016000205481526020019081526020016000206040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900460ff166001811115610e8757610e86612c4a565b5b6001811115610e9957610e98612c4a565b5b81526020016000820160159054906101000a900460ff1615151515815250509050600180811115610ecd57610ecc612c4a565b5b81602001516001811115610ee457610ee3612c4a565b5b1415610ef7578060400151915050610f32565b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f2990612904565b60405180910390fd5b919050565b60055481565b610f468261054a565b610f4f81611882565b610f5983836118d2565b505050565b610f66612143565b600760008381526020019081526020016000206040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900460ff166001811115610fff57610ffe612c4a565b5b600181111561101157611010612c4a565b5b81526020016000820160159054906101000a900460ff1615151515815250509050919050565b600073ffffffffffffffffffffffffffffffffffffffff166110576118ca565b73ffffffffffffffffffffffffffffffffffffffff1614156110ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110a590612884565b60405180910390fd5b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663035d0c696040518163ffffffff1660e01b815260040160206040518083038186803b15801561111657600080fd5b505afa15801561112a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061114e9190612289565b73ffffffffffffffffffffffffffffffffffffffff1661116c6118ca565b73ffffffffffffffffffffffffffffffffffffffff16148061125f5750600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354f2f7af6040518163ffffffff1660e01b815260040160206040518083038186803b1580156111f157600080fd5b505afa158015611205573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112299190612289565b73ffffffffffffffffffffffffffffffffffffffff166112476118ca565b73ffffffffffffffffffffffffffffffffffffffff16145b8061133b5750600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f97e7d746040518163ffffffff1660e01b815260040160206040518083038186803b1580156112cd57600080fd5b505afa1580156112e1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113059190612289565b73ffffffffffffffffffffffffffffffffffffffff166113236118ca565b73ffffffffffffffffffffffffffffffffffffffff16145b61137a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161137190612924565b60405180910390fd5b8060066000848152602001908152602001600020819055505050565b61139e611804565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561140e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161140590612864565b60405180910390fd5b61141781611906565b50565b60076020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060000160149054906101000a900460ff16908060000160159054906101000a900460ff16905083565b60008073ffffffffffffffffffffffffffffffffffffffff1661149f6118ca565b73ffffffffffffffffffffffffffffffffffffffff1614156114f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114ed90612884565b60405180910390fd5b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f97e7d746040518163ffffffff1660e01b815260040160206040518083038186803b15801561155e57600080fd5b505afa158015611572573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115969190612289565b73ffffffffffffffffffffffffffffffffffffffff166115b46118ca565b73ffffffffffffffffffffffffffffffffffffffff161461160a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611601906128c4565b60405180910390fd5b600060066000858152602001908152602001600020549050600060076000838152602001908152602001600020905060008160000160149054906101000a900460ff16905060018081111561166257611661612c4a565b5b81600181111561167557611674612c4a565b5b14156117575760008260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508260000160159054906101000a900460ff161580156116ee57508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16145b156117555760018360000160156101000a81548160ff02191690831515021790555060008360000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b505b8160000160159054906101000a900460ff16935050505092915050565b600061177f82610be9565b602001519050919050565b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806117fd57506117fc826119fb565b5b9050919050565b61180c6118ca565b73ffffffffffffffffffffffffffffffffffffffff1661182a610ce9565b73ffffffffffffffffffffffffffffffffffffffff1614611880576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611877906128e4565b60405180910390fd5b565b6118938161188e6118ca565b611a65565b50565b6118a08282611b02565b6118c58160026000858152602001908152602001600020611be290919063ffffffff16565b505050565b600033905090565b6118dc8282611c12565b6119018160026000858152602001908152602001600020611cf490919063ffffffff16565b505050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60006119db8360000183611d24565b60001c905092915050565b60006119f482600001611d4f565b9050919050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b611a6f8282610d42565b611afe57611a948173ffffffffffffffffffffffffffffffffffffffff166014611d60565b611aa28360001c6020611d60565b604051602001611ab3929190612745565b6040516020818303038152906040526040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611af59190612822565b60405180910390fd5b5050565b611b0c8282610d42565b611bde57600180600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550611b836118ca565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b6000611c0a836000018373ffffffffffffffffffffffffffffffffffffffff1660001b611f9c565b905092915050565b611c1c8282610d42565b15611cf05760006001600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550611c956118ca565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b6000611d1c836000018373ffffffffffffffffffffffffffffffffffffffff1660001b61200c565b905092915050565b6000826000018281548110611d3c57611d3b612ca8565b5b9060005260206000200154905092915050565b600081600001805490509050919050565b606060006002836002611d739190612a5c565b611d7d9190612a06565b67ffffffffffffffff811115611d9657611d95612cd7565b5b6040519080825280601f01601f191660200182016040528015611dc85781602001600182028036833780820191505090505b5090507f300000000000000000000000000000000000000000000000000000000000000081600081518110611e0057611dff612ca8565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f780000000000000000000000000000000000000000000000000000000000000081600181518110611e6457611e63612ca8565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060006001846002611ea49190612a5c565b611eae9190612a06565b90505b6001811115611f4e577f3031323334353637383961626364656600000000000000000000000000000000600f861660108110611ef057611eef612ca8565b5b1a60f81b828281518110611f0757611f06612ca8565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600485901c945080611f4790612bc0565b9050611eb1565b5060008414611f92576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f8990612844565b60405180910390fd5b8091505092915050565b6000611fa88383612120565b612001578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050612006565b600090505b92915050565b6000808360010160008481526020019081526020016000205490506000811461211457600060018261203e9190612ab6565b90506000600186600001805490506120569190612ab6565b90508181146120c557600086600001828154811061207757612076612ca8565b5b906000526020600020015490508087600001848154811061209b5761209a612ca8565b5b90600052602060002001819055508387600101600083815260200190815260200160002081905550505b856000018054806120d9576120d8612c79565b5b60019003818190600052602060002001600090559055856001016000868152602001908152602001600020600090556001935050505061211a565b60009150505b92915050565b600080836001016000848152602001908152602001600020541415905092915050565b6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016000600181111561217f5761217e612c4a565b5b81526020016000151581525090565b60008135905061219d81612f6d565b92915050565b6000815190506121b281612f6d565b92915050565b6000813590506121c781612f84565b92915050565b6000813590506121dc81612f9b565b92915050565b6000813590506121f181612fb2565b92915050565b60006040828403121561220d5761220c612d06565b5b61221760406129ba565b905060006122278482850161218e565b600083015250602061223b848285016121e2565b60208301525092915050565b60008135905061225681612fc2565b92915050565b60006020828403121561227257612271612d0b565b5b60006122808482850161218e565b91505092915050565b60006020828403121561229f5761229e612d0b565b5b60006122ad848285016121a3565b91505092915050565b6000602082840312156122cc576122cb612d0b565b5b60006122da848285016121b8565b91505092915050565b600080604083850312156122fa576122f9612d0b565b5b6000612308858286016121b8565b92505060206123198582860161218e565b9150509250929050565b6000806040838503121561233a57612339612d0b565b5b6000612348858286016121b8565b925050602061235985828601612247565b9150509250929050565b60006020828403121561237957612378612d0b565b5b6000612387848285016121cd565b91505092915050565b6000602082840312156123a6576123a5612d0b565b5b60006123b484828501612247565b91505092915050565b600080604083850312156123d4576123d3612d0b565b5b60006123e285828601612247565b92505060206123f38582860161218e565b9150509250929050565b6000806060838503121561241457612413612d0b565b5b600061242285828601612247565b9250506020612433858286016121f7565b9150509250929050565b6000806040838503121561245457612453612d0b565b5b600061246285828601612247565b925050602061247385828601612247565b9150509250929050565b61248681612aea565b82525050565b61249581612aea565b82525050565b6124a481612afc565b82525050565b6124b381612afc565b82525050565b6124c281612b08565b82525050565b6124d181612b7b565b82525050565b6124e081612b7b565b82525050565b60006124f1826129df565b6124fb81856129ea565b935061250b818560208601612b8d565b61251481612d10565b840191505092915050565b600061252a826129df565b61253481856129fb565b9350612544818560208601612b8d565b80840191505092915050565b600061255d6020836129ea565b915061256882612d21565b602082019050919050565b60006125806026836129ea565b915061258b82612d4a565b604082019050919050565b60006125a36004836129ea565b91506125ae82612d99565b602082019050919050565b60006125c66004836129ea565b91506125d182612dc2565b602082019050919050565b60006125e96004836129ea565b91506125f482612deb565b602082019050919050565b600061260c6020836129ea565b915061261782612e14565b602082019050919050565b600061262f6004836129ea565b915061263a82612e3d565b602082019050919050565b60006126526004836129ea565b915061265d82612e66565b602082019050919050565b60006126756017836129fb565b915061268082612e8f565b601782019050919050565b6000612698600c836129ea565b91506126a382612eb8565b602082019050919050565b60006126bb6011836129fb565b91506126c682612ee1565b601182019050919050565b60006126de602f836129ea565b91506126e982612f0a565b604082019050919050565b60608201600082015161270a600085018261247d565b50602082015161271d60208501826124c8565b506040820151612730604085018261249b565b50505050565b61273f81612b71565b82525050565b600061275082612668565b915061275c828561251f565b9150612767826126ae565b9150612773828461251f565b91508190509392505050565b6000602082019050612794600083018461248c565b92915050565b60006060820190506127af600083018661248c565b6127bc60208301856124d7565b6127c960408301846124aa565b949350505050565b60006020820190506127e660008301846124aa565b92915050565b600060208201905061280160008301846124b9565b92915050565b600060208201905061281c60008301846124d7565b92915050565b6000602082019050818103600083015261283c81846124e6565b905092915050565b6000602082019050818103600083015261285d81612550565b9050919050565b6000602082019050818103600083015261287d81612573565b9050919050565b6000602082019050818103600083015261289d81612596565b9050919050565b600060208201905081810360008301526128bd816125b9565b9050919050565b600060208201905081810360008301526128dd816125dc565b9050919050565b600060208201905081810360008301526128fd816125ff565b9050919050565b6000602082019050818103600083015261291d81612622565b9050919050565b6000602082019050818103600083015261293d81612645565b9050919050565b6000602082019050818103600083015261295d8161268b565b9050919050565b6000602082019050818103600083015261297d816126d1565b9050919050565b600060608201905061299960008301846126f4565b92915050565b60006020820190506129b46000830184612736565b92915050565b60006129c46129d5565b90506129d08282612bea565b919050565b6000604051905090565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b6000612a1182612b71565b9150612a1c83612b71565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115612a5157612a50612c1b565b5b828201905092915050565b6000612a6782612b71565b9150612a7283612b71565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615612aab57612aaa612c1b565b5b828202905092915050565b6000612ac182612b71565b9150612acc83612b71565b925082821015612adf57612ade612c1b565b5b828203905092915050565b6000612af582612b51565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6000819050612b4c82612f59565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000612b8682612b3e565b9050919050565b60005b83811015612bab578082015181840152602081019050612b90565b83811115612bba576000848401525b50505050565b6000612bcb82612b71565b91506000821415612bdf57612bde612c1b565b5b600182039050919050565b612bf382612d10565b810181811067ffffffffffffffff82111715612c1257612c11612cd7565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e74600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4530303400000000000000000000000000000000000000000000000000000000600082015250565b7f4530353800000000000000000000000000000000000000000000000000000000600082015250565b7f4530313700000000000000000000000000000000000000000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f4530353000000000000000000000000000000000000000000000000000000000600082015250565b7f4530313600000000000000000000000000000000000000000000000000000000600082015250565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000600082015250565b7f496e76616c696420747970650000000000000000000000000000000000000000600082015250565b7f206973206d697373696e6720726f6c6520000000000000000000000000000000600082015250565b7f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560008201527f20726f6c657320666f722073656c660000000000000000000000000000000000602082015250565b60028110612f6a57612f69612c4a565b5b50565b612f7681612aea565b8114612f8157600080fd5b50565b612f8d81612b08565b8114612f9857600080fd5b50565b612fa481612b12565b8114612faf57600080fd5b50565b60028110612fbf57600080fd5b50565b612fcb81612b71565b8114612fd657600080fd5b5056fea2646970667358221220143bc6f571abfdf296ba5683f1789985b1564268e1621b20534ae130788de69564736f6c63430008070033";

type LockManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LockManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LockManager__factory extends ContractFactory {
  constructor(...args: LockManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    provider: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<LockManager> {
    return super.deploy(provider, overrides || {}) as Promise<LockManager>;
  }
  override getDeployTransaction(
    provider: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(provider, overrides || {});
  }
  override attach(address: string): LockManager {
    return super.attach(address) as LockManager;
  }
  override connect(signer: Signer): LockManager__factory {
    return super.connect(signer) as LockManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LockManagerInterface {
    return new utils.Interface(_abi) as LockManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LockManager {
    return new Contract(address, _abi, signerOrProvider) as LockManager;
  }
}
