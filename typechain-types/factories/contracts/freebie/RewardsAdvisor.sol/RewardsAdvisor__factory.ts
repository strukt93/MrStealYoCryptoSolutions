/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  RewardsAdvisor,
  RewardsAdvisorInterface,
} from "../../../../contracts/freebie/RewardsAdvisor.sol/RewardsAdvisor";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_farm",
        type: "address",
      },
      {
        internalType: "address",
        name: "_xfarm",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "farmDeposit",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "deposit",
    outputs: [
      {
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "farm",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "snapshot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferTokenOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "from",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "rewards",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "xfarm",
    outputs: [
      {
        internalType: "contract GovToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001f8a38038062001f8a833981810160405281019062000037919062000118565b81600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050620001b2565b600081519050620001128162000198565b92915050565b6000806040838503121562000132576200013162000193565b5b6000620001428582860162000101565b9250506020620001558582860162000101565b9150509250929050565b60006200016c8262000173565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b620001a3816200015f565b8114620001af57600080fd5b50565b611dc880620001c26000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638da5cb5b1161005b5780638da5cb5b146101155780639711715a14610133578063b460af941461013d578063f2fde38b1461016d57610088565b806321e6b53d1461008d5780632e2d2984146100a957806335e41935146100d957806336e9332d146100f7575b600080fd5b6100a760048036038101906100a291906113c9565b610189565b005b6100c360048036038101906100be919061147d565b6102a7565b6040516100d09190611946565b60405180910390f35b6100e16108c7565b6040516100ee91906117ce565b60405180910390f35b6100ff6108ed565b60405161010c91906117e9565b60405180910390f35b61011d610913565b60405161012a919061172a565b60405180910390f35b61013b610937565b005b610157600480360381019061015291906114d0565b610a49565b6040516101649190611946565b60405180910390f35b610187600480360381019061018291906113c9565b610ed5565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610217576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161020e906118c6565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f2fde38b826040518263ffffffff1660e01b8152600401610272919061172a565b600060405180830381600087803b15801561028c57600080fd5b505af11580156102a0573d6000803e3d6000fd5b5050505050565b60008084116102eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e2906118a6565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415801561035457503073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b610393576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038a90611846565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156103fc57503073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b61043b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043290611866565b60405180910390fd5b8390506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156104a857600080fd5b505afa1580156104bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e09190611450565b1461064e576000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610542919061172a565b60206040518083038186803b15801561055a57600080fd5b505afa15801561056e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105929190611450565b905080600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156105fd57600080fd5b505afa158015610611573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106359190611450565b8361064091906119c4565b61064a9190611993565b9150505b61065783610fa6565b156107a9573373ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156106bb57600080fd5b505af11580156106cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106f391906113f6565b73ffffffffffffffffffffffffffffffffffffffff161461071357600080fd5b8273ffffffffffffffffffffffffffffffffffffffff16632e88fb97600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1630876040518463ffffffff1660e01b81526004016107729392919061176e565b600060405180830381600087803b15801561078c57600080fd5b505af11580156107a0573d6000803e3d6000fd5b50505050610831565b3373ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146107e157600080fd5b610830833086600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610fbf909392919063ffffffff16565b5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1983836040518363ffffffff1660e01b815260040161088e9291906117a5565b600060405180830381600087803b1580156108a857600080fd5b505af11580156108bc573d6000803e3d6000fd5b505050509392505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146109c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109bc906118c6565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639711715a6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610a2f57600080fd5b505af1158015610a43573d6000803e3d6000fd5b50505050565b6000808411610a8d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a84906118e6565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610afd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610af490611846565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610b6d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b6490611866565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161480610c5157503373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610c0157600080fd5b505af1158015610c15573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c3991906113f6565b73ffffffffffffffffffffffffffffffffffffffff16145b610c90576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c8790611826565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015610cf857600080fd5b505afa158015610d0c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d309190611450565b84600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610d8c919061172a565b60206040518083038186803b158015610da457600080fd5b505afa158015610db8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ddc9190611450565b610de691906119c4565b610df09190611993565b9050610e3f8382600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166110489092919063ffffffff16565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639dc29fac83866040518363ffffffff1660e01b8152600401610e9c929190611745565b600060405180830381600087803b158015610eb657600080fd5b505af1158015610eca573d6000803e3d6000fd5b505050509392505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610f63576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f5a906118c6565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080823b905060008163ffffffff1611915050919050565b611042846323b872dd60e01b858585604051602401610fe09392919061176e565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506110ce565b50505050565b6110c98363a9059cbb60e01b84846040516024016110679291906117a5565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506110ce565b505050565b6000611130826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166111959092919063ffffffff16565b905060008151111561119057808060200190518101906111509190611423565b61118f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161118690611926565b60405180910390fd5b5b505050565b60606111a484846000856111ad565b90509392505050565b6060824710156111f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111e990611886565b60405180910390fd5b6111fb856112c1565b61123a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161123190611906565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516112639190611713565b60006040518083038185875af1925050503d80600081146112a0576040519150601f19603f3d011682016040523d82523d6000602084013e6112a5565b606091505b50915091506112b58282866112e4565b92505050949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b606083156112f457829050611344565b6000835111156113075782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161133b9190611804565b60405180910390fd5b9392505050565b60008135905061135a81611d36565b92915050565b60008151905061136f81611d36565b92915050565b60008135905061138481611d4d565b92915050565b60008151905061139981611d64565b92915050565b6000813590506113ae81611d7b565b92915050565b6000815190506113c381611d7b565b92915050565b6000602082840312156113df576113de611b63565b5b60006113ed8482850161134b565b91505092915050565b60006020828403121561140c5761140b611b63565b5b600061141a84828501611360565b91505092915050565b60006020828403121561143957611438611b63565b5b60006114478482850161138a565b91505092915050565b60006020828403121561146657611465611b63565b5b6000611474848285016113b4565b91505092915050565b60008060006060848603121561149657611495611b63565b5b60006114a48682870161139f565b93505060206114b586828701611375565b92505060406114c68682870161134b565b9150509250925092565b6000806000606084860312156114e9576114e8611b63565b5b60006114f78682870161139f565b93505060206115088682870161134b565b925050604061151986828701611375565b9150509250925092565b61152c81611a78565b82525050565b61153b81611a1e565b82525050565b600061154c82611961565b6115568185611977565b9350611566818560208601611ad2565b80840191505092915050565b61157b81611a8a565b82525050565b61158a81611a9c565b82525050565b600061159b8261196c565b6115a58185611982565b93506115b5818560208601611ad2565b6115be81611b68565b840191505092915050565b60006115d6600583611982565b91506115e182611b79565b602082019050919050565b60006115f9600283611982565b915061160482611ba2565b602082019050919050565b600061161c600483611982565b915061162782611bcb565b602082019050919050565b600061163f602683611982565b915061164a82611bf4565b604082019050919050565b6000611662601883611982565b915061166d82611c43565b602082019050919050565b6000611685600a83611982565b915061169082611c6c565b602082019050919050565b60006116a8600683611982565b91506116b382611c95565b602082019050919050565b60006116cb601d83611982565b91506116d682611cbe565b602082019050919050565b60006116ee602a83611982565b91506116f982611ce7565b604082019050919050565b61170d81611a6e565b82525050565b600061171f8284611541565b915081905092915050565b600060208201905061173f6000830184611532565b92915050565b600060408201905061175a6000830185611523565b6117676020830184611704565b9392505050565b60006060820190506117836000830186611532565b6117906020830185611532565b61179d6040830184611704565b949350505050565b60006040820190506117ba6000830185611532565b6117c76020830184611704565b9392505050565b60006020820190506117e36000830184611572565b92915050565b60006020820190506117fe6000830184611581565b92915050565b6000602082019050818103600083015261181e8184611590565b905092915050565b6000602082019050818103600083015261183f816115c9565b9050919050565b6000602082019050818103600083015261185f816115ec565b9050919050565b6000602082019050818103600083015261187f8161160f565b9050919050565b6000602082019050818103600083015261189f81611632565b9050919050565b600060208201905081810360008301526118bf81611655565b9050919050565b600060208201905081810360008301526118df81611678565b9050919050565b600060208201905081810360008301526118ff8161169b565b9050919050565b6000602082019050818103600083015261191f816116be565b9050919050565b6000602082019050818103600083015261193f816116e1565b9050919050565b600060208201905061195b6000830184611704565b92915050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b600061199e82611a6e565b91506119a983611a6e565b9250826119b9576119b8611b34565b5b828204905092915050565b60006119cf82611a6e565b91506119da83611a6e565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611a1357611a12611b05565b5b828202905092915050565b6000611a2982611a4e565b9050919050565b6000611a3b82611a4e565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000611a8382611aae565b9050919050565b6000611a9582611aae565b9050919050565b6000611aa782611aae565b9050919050565b6000611ab982611ac0565b9050919050565b6000611acb82611a4e565b9050919050565b60005b83811015611af0578082015181840152602081019050611ad5565b83811115611aff576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f6f776e6572000000000000000000000000000000000000000000000000000000600082015250565b7f746f000000000000000000000000000000000000000000000000000000000000600082015250565b7f66726f6d00000000000000000000000000000000000000000000000000000000600082015250565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b7f6465706f73697473206d757374206265206e6f6e7a65726f0000000000000000600082015250565b7f6f6e6c79206f776e657200000000000000000000000000000000000000000000600082015250565b7f7368617265730000000000000000000000000000000000000000000000000000600082015250565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b611d3f81611a1e565b8114611d4a57600080fd5b50565b611d5681611a30565b8114611d6157600080fd5b50565b611d6d81611a42565b8114611d7857600080fd5b50565b611d8481611a6e565b8114611d8f57600080fd5b5056fea2646970667358221220fcdbb17a915a52cbb344fb370de16b307a6f1797b818e2bfaa126dce57733d8d64736f6c63430008070033";

type RewardsAdvisorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RewardsAdvisorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RewardsAdvisor__factory extends ContractFactory {
  constructor(...args: RewardsAdvisorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _farm: PromiseOrValue<string>,
    _xfarm: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RewardsAdvisor> {
    return super.deploy(
      _farm,
      _xfarm,
      overrides || {}
    ) as Promise<RewardsAdvisor>;
  }
  override getDeployTransaction(
    _farm: PromiseOrValue<string>,
    _xfarm: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_farm, _xfarm, overrides || {});
  }
  override attach(address: string): RewardsAdvisor {
    return super.attach(address) as RewardsAdvisor;
  }
  override connect(signer: Signer): RewardsAdvisor__factory {
    return super.connect(signer) as RewardsAdvisor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RewardsAdvisorInterface {
    return new utils.Interface(_abi) as RewardsAdvisorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RewardsAdvisor {
    return new Contract(address, _abi, signerOrProvider) as RewardsAdvisor;
  }
}
